/*
 * Copyright (c) 2021 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors/mouse_keys.dtsi>

#define DEFAULT  0
#define LAY_1 1
#define LAY_2 2
#define LAY_3 3
#define BT_CTRL 5

#define MOUSE_MOVE_MAX 3000                     /* <--- New max speed setting (default: 600) */
#undef MOVE_UP
#undef MOVE_DOWN
#undef MOVE_LEFT
#undef MOVE_RIGHT
#define MOVE_UP MOVE_Y(-MOUSE_MOVE_MAX)
#define MOVE_DOWN MOVE_Y(MOUSE_MOVE_MAX)
#define MOVE_LEFT MOVE_X(-MOUSE_MOVE_MAX)
#define MOVE_RIGHT MOVE_X(MOUSE_MOVE_MAX)


#define MOUSE_SCROLL_MAX 60                     
#undef SCRL_UP
#undef SCRL_DOWN
#undef SCRL_LEFT
#undef SCRL_RIGHT
#define SCRL_UP MOVE_Y(MOUSE_SCROLL_MAX)
#define SCRL_DOWN MOVE_Y(-MOUSE_SCROLL_MAX)
#define SCRL_LEFT MOVE_X(-MOUSE_SCROLL_MAX)
#define SCRL_RIGHT MOVE_X(MOUSE_SCROLL_MAX)

&mmv {
	time-to-max-speed-ms = <400>;             /* <--- How long time until max speed is reached (default: 500) */
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp TAB     &kp Q  &kp W  &kp E           &kp R  &kp T             &kp Y      &kp U  &kp I          &kp O    &kp P     &kp BSPC
                &kp ESCAPE  &kp A  &kp S  &kp D           &kp F  &kp G             &kp H      &kp J  &kp K          &kp L    &kp SEMI  &kp ENTER
                &kp LSHFT   &kp Z  &kp X  &kp C           &kp V  &kp B             &kp N      &kp M  &kp COMMA      &kp DOT  &kp FSLH  &kp RIGHT_SHIFT
                &kp LCTRL   &none  &none  &kp LEFT_SHIFT  &mo 1  &kp LEFT_COMMAND  &kp SPACE  &mo 2  &kp RIGHT_ALT  &none    &mo 3     &none
                >;
        };

        layer_1 {
            bindings = <
                &kp TILDE &kp EXCL &kp AT_SIGN &kp HASH &kp DLLR &kp PRCNT &kp CARET &kp AMPS &kp STAR &kp LEFT_PARENTHESIS &kp RIGHT_PARENTHESIS &kp PIPE
                &kp ESCAPE &none &none &none &none &none &none &kp UNDER &kp PLUS &kp LEFT_BRACE &kp RIGHT_BRACE &kp DQT
                &kp LSHFT &none &none &none &none &mkp LCLK &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_UP &mmv MOVE_RIGHT &mkp RCLK &kp RIGHT_SHIFT
                &kp LCTRL &none &none &kp LSHFT &none &kp LCMD &kp SPACE &none &kp RIGHT_ALT &none &none &none
            >;
        };
        layer_2 {
            bindings = <
                &kp GRAVE  &kp KP_N1  &kp KP_N2  &kp KP_N3 &kp KP_N4 &kp KP_N5  &kp KP_N6 &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_N0 &kp BACKSLASH 
                &kp ESCAPE  &none  &none  &none  &none  &none  &none  &kp KP_MINUS &kp KP_EQUAL  &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp SINGLE_QUOTE
                &trans  &none  &none  &none  &none  &none  &msc SCRL_LEFT  &msc SCRL_DOWN  &msc SCRL_UP  &msc SCRL_RIGHT  &trans  &kp RIGHT_SHIFT
                &kp LCTRL  &none  &none  &kp LSHFT  &none  &kp LEFT_COMMAND  &kp SPACE  &none  &kp RIGHT_ALT  &none  &none  &none
                >;
        };

        layer_3 {
            bindings = <
                &kp TAB &none  &none  &none  &trans  &trans  &kp C_PREV  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT  &none  &kp BACKSPACE
                &kp ESCAPE  &none  &none  &none  &none  &none  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &none  &kp ENTER
                &kp LEFT_SHIFT  &none  &none  &none  &none  &none  &none  &kp C_MUTE  &kp C_PLAY  &kp C_STOP  &none  &kp RIGHT_SHIFT
                &kp LCTRL  &none  &none  &kp LSHFT  &none  &kp LEFT_COMMAND  &kp SPACE  &none  &kp RIGHT_ALT  &none  &none  &none
                >;
        };

        bt_control {
            bindings = <
                &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans  &trans  &trans      &trans      &trans  &trans
                &trans      &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans      &trans      &trans  &trans
                &trans      &trans        &trans        &trans        &trans        &trans        &trans  &trans  &trans      &trans      &trans  &trans
                &trans      &trans        &trans        &trans        &trans        &trans        &trans  &trans  &bt BT_PRV  &bt BT_NXT  &trans  &trans
                >;
        };
    };
};
